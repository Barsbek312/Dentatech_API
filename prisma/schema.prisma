// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// generator dbml {
//   provider = "prisma-dbml-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 1 уровень

model ToothPart {
  id        Int    @id @default(autoincrement())
  toothPart String

  teethPartConnect ToothPartConnect[]
}

model ToothType {
  id        Int    @id @default(autoincrement())
  toothType String

  teeth Tooth[]
}

model City {
  id Int @id @default(autoincrement())

  city String

  branches Branch[]
  patiens  Patient[]
}

model District {
  id       Int    @id @default(autoincrement())
  district String

  patients Patient[]
}

model Allergy {
  id      Int    @id @default(autoincrement())
  allergy String

  patientAllergies PatientAllergy[]
}

model PatientType {
  id          Int    @id @default(autoincrement())
  patientType String

  patients Patient[]
}

model PatientStatus {
  id            Int    @id @default(autoincrement())
  patientStatus String

  patients Patient[]
}

model ReceptionStatus {
  id              Int    @id @default(autoincrement())
  receptionStatus String

  receptions Reception[]
}

model ReceptionType {
  id            Int    @id @default(autoincrement())
  receptionType String

  receptions Reception[]
}

model Jaw {
  id  Int    @id @default(autoincrement())
  jaw String

  rows Row[]
}

model Clinic {
  id     Int    @id @default(autoincrement())
  clinic String

  diseases   Disease[]
  branches   Branch[]
  patients   Patient[]
  procedured Procedure[]
}

model StaffPosition {
  id            Int    @id @default(autoincrement())
  staffPosition String

  staff Staff[]
}

model StaffStatus {
  id          Int    @id @default(autoincrement())
  staffStatus String

  staff Staff[]
}

model TemplateType {
  id           Int    @id @default(autoincrement())
  templateType String

  templates Template[]
}

model ProcedureType {
  id            Int    @id @default(autoincrement())
  procedureType String

  procedures Procedure[]
}

// 2 уровень

model Disease {
  id      Int    @id @default(autoincrement())
  disease String

  clinicId Int
  clinic   Clinic @relation(fields: [clinicId], references: [id])

  diagnosis Diagnosis[]
}

model Row {
  id  Int    @id @default(autoincrement())
  row String

  jawId Int
  jaw   Jaw @relation(fields: [jawId], references: [id])

  teeth Tooth[]
}

model Branch {
  id     Int    @id @default(autoincrement())
  branch String
  street String

  clinicId Int
  clinic   Clinic @relation(fields: [clinicId], references: [id])

  cityId Int
  city   City @relation(fields: [cityId], references: [id])

  staff Staff[]
}

model Procedure {
  id          Int     @id @default(autoincrement())
  procedure   String
  description String?
  designation String?
  color       String?
  price       Decimal

  procedureTypeId Int
  procedureType   ProcedureType @relation(fields: [procedureTypeId], references: [id])

  clinicId Int
  clinic   Clinic @relation(fields: [clinicId], references: [id])

  templates         Template[]
  templatesText     TemplateText[]
  plannedProcedures PlannedProcedure[]
  medicalHistory    DiseaseHistory[]
}

// 3 уровень

model Patient {
  id          Int       @id @default(autoincrement())
  name        String
  surname     String
  isMale      Boolean
  // Если мужик - true, женщина false
  patronymic  String?
  birthDate   DateTime? @db.Date
  phone       String?
  email       String?
  street      String?
  where       String?
  // Где он узнал?
  description String?

  districtId Int
  district   District @relation(fields: [districtId], references: [id])

  patientTypeId Int
  patientType   PatientType @relation(fields: [patientTypeId], references: [id])

  patientStatusId Int
  patientStatus   PatientStatus @relation(fields: [patientStatusId], references: [id])

  cityId Int
  city   City @relation(fields: [cityId], references: [id])

  clinicId Int
  clinic   Clinic @relation(fields: [clinicId], references: [id])

  patientAllergies  PatientAllergy[]
  photo             Photo[]
  receptions        Reception[]
  diagnosis         Diagnosis[]
  plannedProcedures PlannedProcedure[]
  templatesHistory  TemplateHistory[]
}

model Staff {
  id Int @id @default(autoincrement())

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  name            String
  surname         String
  isMale          Boolean
  phone           String?
  birthDate       DateTime? @db.Date
  // Если мужик - true, женщина false
  isEmailVerified Boolean   @default(false)
  isAdmin         Boolean   @default(false)
  email           String    @unique
  hash            String

  emailVerificationToken String?   @unique @db.VarChar(255)
  tokenExpirationDate    DateTime?

  branchId Int
  branch   Branch @relation(fields: [branchId], references: [id])

  staffPositionId Int
  staffPosition   StaffPosition @relation(fields: [staffPositionId], references: [id])

  staffStatusId Int
  staffStatus   StaffStatus @relation(fields: [staffStatusId], references: [id])

  receptions        Reception[]
  diagnosis         Diagnosis[]
  plannedProcedures PlannedProcedure[]
}

model Template {
  id    Int    @id @default(autoincrement())
  title String

  templateTypeId Int
  templateType   TemplateType @relation(fields: [templateTypeId], references: [id])

  procedureId Int
  procedure   Procedure @relation(fields: [procedureId], references: [id])

  templateInputs     TemplateInput[]
  templateCheckboxes TemplateCheckbox[]
  templateSelects    TemplateSelect[]
  templateHistories  TemplateHistory[]
}

model TemplateText {
  id Int @id @default(autoincrement())

  title String
  text  String

  procedureId Int
  procedure   Procedure @relation(fields: [procedureId], references: [id])
}

// 4 уровень

model TemplateInput {
  id Int @id @default(autoincrement())

  title String

  templateId Int
  template   Template @relation(fields: [templateId], references: [id])

  templateInputsHistory TemplateInputHistory[]
}

model TemplateCheckbox {
  id Int @id @default(autoincrement())

  title String

  templateId Int
  template   Template @relation(fields: [templateId], references: [id])

  templateCheckboxOptions   TemplateCheckboxOption[]
  templateCheckboxesHistory TemplateCheckboxHistory[]
}

model TemplateSelect {
  id Int @id @default(autoincrement())

  title String

  templateId Int
  template   Template @relation(fields: [templateId], references: [id])

  templateSelectsHistory TemplateSelectHistory[]
  templateSelectsOption  TemplateSelectOption[]
}

model Tooth {
  id    Int    @id @default(autoincrement())
  tooth String

  toothTypeId Int
  toothType   ToothType @relation(fields: [toothTypeId], references: [id])

  rowId Int
  row   Row @relation(fields: [rowId], references: [id])

  teethPartConnect ToothPartConnect[]
  templatesHistory TemplateHistory[]
  photo            Photo[]
}

model PatientAllergy {
  id Int @id @default(autoincrement())

  allergyId Int
  allergy   Allergy @relation(fields: [allergyId], references: [id])

  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
}

model Reception {
  id Int @id @default(autoincrement())

  start           DateTime
  end             DateTime
  description     String?
  backgroundColor String

  receptionStatusId Int             @default(5)
  receptionStatus   ReceptionStatus @relation(fields: [receptionStatusId], references: [id])

  receptionTypeId Int
  receptionType   ReceptionType @relation(fields: [receptionTypeId], references: [id])

  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])

  staffId Int
  staff   Staff @relation(fields: [staffId], references: [id])

  templatesHistory TemplateHistory[]
  medicalHistory   DiseaseHistory[]
}

// 5 уровень

model Photo {
  id Int @id @default(autoincrement())

  pictureURL String

  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])

  toothId Int
  tooth   Tooth @relation(fields: [toothId], references: [id])
}

model TemplateHistory {
  id Int @id @default(autoincrement())

  text String

  templateId Int
  template   Template @relation(fields: [templateId], references: [id])

  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])

  toothId Int
  tooth   Tooth @relation(fields: [toothId], references: [id])

  receptionId Int
  reception   Reception @relation(fields: [receptionId], references: [id], onDelete: Cascade)

  templateSelectsHistory    TemplateSelectHistory[]
  templateCheckboxesHistory TemplateCheckboxHistory[]
  templateInputsHistory     TemplateInputHistory[]
  templateTextsHistory      TemplateTextHistory[]
}

model ToothPartConnect {
  id Int @id @default(autoincrement())

  toothPartId Int
  toothPart   ToothPart @relation(fields: [toothPartId], references: [id])

  toothId Int
  tooth   Tooth @relation(fields: [toothId], references: [id])

  diagnosis         Diagnosis[]
  plannedProcedures PlannedProcedure[]
  medicalHistory    DiseaseHistory[]
}

model TemplateSelectOption {
  id Int @id @default(autoincrement())

  option String

  templateSelectId Int
  templateSelect   TemplateSelect @relation(fields: [templateSelectId], references: [id])

  templateSelectsHistory TemplateSelectHistory[]
}

model TemplateCheckboxOption {
  id Int @id @default(autoincrement())

  option String

  templateCheckboxId Int
  templateCheckbox   TemplateCheckbox @relation(fields: [templateCheckboxId], references: [id])

  templateCheckboxOptionsHistory TemplateCheckboxOptionHistory[]
}

// 6 уровень

model Diagnosis {
  id Int @id @default(autoincrement())

  diseaseId Int
  diseases  Disease @relation(fields: [diseaseId], references: [id])

  toothPartConnectId Int
  toothPartConnect   ToothPartConnect @relation(fields: [toothPartConnectId], references: [id])

  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])

  staffId Int
  staff   Staff @relation(fields: [staffId], references: [id])

  updatedAt DateTime @updatedAt
}

model PlannedProcedure {
  id Int @id @default(autoincrement())

  toothPartConnectId Int
  toothPartConnect   ToothPartConnect @relation(fields: [toothPartConnectId], references: [id])

  procedureId Int
  procedure   Procedure @relation(fields: [procedureId], references: [id])

  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])

  staffId Int
  staff   Staff @relation(fields: [staffId], references: [id])

  updatedAt DateTime @updatedAt
}

model DiseaseHistory {
  id Int @id @default(autoincrement())

  receptionId Int
  reception   Reception @relation(fields: [receptionId], references: [id], onDelete: Cascade)

  procedureId Int
  procedure   Procedure @relation(fields: [procedureId], references: [id])

  toothPartConnectId Int
  toothPartConnect    ToothPartConnect @relation(fields: [toothPartConnectId], references: [id])

  updatedAt DateTime @updatedAt
}

model TemplateTextHistory {
  id Int @id @default(autoincrement())

  text String
  date DateTime @default(now()) @db.Date

  templateHistoryId Int
  templateHistory   TemplateHistory @relation(fields: [templateHistoryId], references: [id], onDelete: Cascade)
}

model TemplateInputHistory {
  id Int @id @default(autoincrement())

  value String
  date  DateTime @default(now()) @db.Date

  templateInputId Int
  templateInput   TemplateInput @relation(fields: [templateInputId], references: [id])

  templateHistoryId Int
  templateHistory   TemplateHistory @relation(fields: [templateHistoryId], references: [id], onDelete: Cascade)
}

model TemplateCheckboxHistory {
  id Int @id @default(autoincrement())

  templateCheckboxId Int
  templateCheckbox   TemplateCheckbox @relation(fields: [templateCheckboxId], references: [id])

  templateHistoryId Int
  templateHistory   TemplateHistory @relation(fields: [templateHistoryId], references: [id], onDelete: Cascade)

  templateCheckboxOptionsHistroy TemplateCheckboxOptionHistory[]
}

model TemplateSelectHistory {
  id Int @id @default(autoincrement())

  templateSelectId Int
  templateSelect   TemplateSelect @relation(fields: [templateSelectId], references: [id])

  templateSelectOptionId Int
  templateSelectOption   TemplateSelectOption @relation(fields: [templateSelectOptionId], references: [id])

  templateHistoryId Int
  templateHistory   TemplateHistory @relation(fields: [templateHistoryId], references: [id], onDelete: Cascade)
}

// 7 уровень

model TemplateCheckboxOptionHistory {
  id Int @id @default(autoincrement())

  templateCheckboxHistoryId Int
  templateCheckboxHistory   TemplateCheckboxHistory @relation(fields: [templateCheckboxHistoryId], references: [id], onDelete: Cascade)

  templateCheckboxOptionId Int
  templateCheckboxOption   TemplateCheckboxOption @relation(fields: [templateCheckboxOptionId], references: [id])
}
